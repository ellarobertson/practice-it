/* Write a method called collapse that accepts an array of integers as a parameter
and returns a new array containing the result of replacing each pair of integers with
the sum of that pair. For example, if an array called list stores the values 
{7, 2, 8, 9, 4, 13, 7, 1, 9, 10}, then the call of collapse(list) should return a new
array containing {9, 17, 17, 8, 19}. The first pair from the original list is collapsed 
into 9 (7 + 2), the second pair is collapsed into 17 (8 + 9), and so on. If the list 
stores an odd number of elements, the final element is not collapsed.
*/

public static int[] collapse(int[] a){
    int factor = a.length / 2;
    int arrayLength = factor;
    if(a.length % 2 != 0){
        arrayLength++;
    }
    int[] result = new int[arrayLength];
    int currentPlace = 0;
    for(int i = 0; i < factor; i++){
        result[i] = a[currentPlace] + a[currentPlace + 1];
        currentPlace += 2;
    }
    if(a.length % 2 != 0){
        result[arrayLength - 1] = a[a.length - 1];
    }
    return result;
}
