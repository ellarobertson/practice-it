/* Write a method called printSquare that takes in two integer parameters, a min and a max, and prints the
numbers in the range from min to max inclusive in a square pattern. 
Each line of the square consists of a circular sequence of increasing integers between min and max.
Each line prints a different permutation of this sequence. The first line begins with min, the second line begins with min + 1, and so on. When the sequence in any line reaches max, it wraps around back to min.

You may assume the caller of the method will pass a min and a max parameter such that min is less than or equal to max.

Call 
printSquare(1, 5)

Output	
12345
23451
34512
45123
51234

Call
printSquare(3, 9)

Output
3456789
4567893
5678934
6789345
7893456
8934567
9345678
*/

public static void printSquare(int min, int max){
    final int rowsAndColumns = (max - min + 1);
    int rowStart = min;
    for(int i = 0; i < rowsAndColumns; i++){
        int currentNumber = rowStart;
        for(int j = 0; j < rowsAndColumns; j++){
            System.out.print(currentNumber);
            if(currentNumber == max){
                currentNumber = min;
            }
            else{
                currentNumber++;
            }
        }
        System.out.println();
        rowStart++;
    }
}
